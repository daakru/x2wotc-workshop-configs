;---------------------------------------------------------------------------------------
;  FILE:    XComAI.ini
;  AUTHOR:  Ashlynne  --  9/15/2017
;---------------------------------------------------------------------------------------

[XComGame.XGAIBehavior]

;AOEProfiles
+AoEProfiles=(Profile=VoidRiftProfile, Ability=VoidRift, bTargetEnemy=1, bTargetAllies=0, MinTargets=2)

[XComGame.X2AIBTBehaviorTree]

+EquivalentAbilities=(KeyName=Ability_AshDeathsEmbrace, EquivalentAbilityName[0]=Ability_DeathsEmbraceM1, EquivalentAbilityName[1]=Ability_DeathsEmbraceM2, EquivalentAbilityName[2]=Ability_DeathsEmbraceM3)

;---------------------------------------------------------------------------------------
;   ADVENT WARLOCK
;---------------------------------------------------------------------------------------
+Behaviors=(BehaviorName="AdventWarlock::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdvWarlock_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AdvWarlock_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AdvWarlock_RedAbilitySelector)
+Behaviors=(BehaviorName=AdvWarlock_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=DarkEventPriorityMoveThenGrenade, Child[2]=AdvWarlock_RedFirstAction, Child[3]=AdvWarlock_RedLastAction)

+Behaviors=(BehaviorName=AdvWarlock_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AdvWarlock_RedFirstActionSelector)
+Behaviors=(BehaviorName=AdvWarlock_RedFirstActionSelector, NodeType=Selector,\\
	  Child[0]=DoIfFlankedMove,\\
	  Child[1]=TryDeathsEmbrace,\\
	  Child[2]=TryVoidRift, \\
	  Child[3]=TryWarlockRaiseDead,\\
      Child[4]=TryPsionicOption,\\
	  Child[5]=TryGrenade,\\
	  Child[6]=SelectMove_JobOrAggressive, \\
	  Child[7]=TryShootOrReloadOrOverwatch, \\
      Child[8]=HuntEnemyWithCover)
	
+Behaviors=(BehaviorName=AdvWarlock_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AdvWarlock_RedLastActionSelector)
+Behaviors=(BehaviorName=AdvWarlock_RedLastActionSelector, NodeType=Selector,\\
	  Child[0]=TryDeathsEmbrace,\\
	  Child[1]=TryVoidRift, \\
	  Child[2]=TryWarlockRaiseDead,\\
	  Child[3]=TryGrenade,\\
	  Child[4]=TryPsionicOption,\\
	  Child[5]=TryShootOrReloadOrOverwatch, \\
      Child[6]=HuntEnemyWithCover,\\
	  Child[7]=SelectMove_JobOrAggressive)


;PSI REANIMATION - Warlock will typically try to use this power if there are visible corpses, he is uninjured, and he cannot find a suitable AoE target.
+Behaviors=(BehaviorName=TryWarlockRaiseDead, NodeType=Sequence, Child[0]=IsAbilityAvailable-Ability_AshRaiseDead, Child[1]=SelectTargetForWarlockRaiseDead, Child[2]=SelectAbility-Ability_AshRaiseDead)
+Behaviors=(BehaviorName=IsAbilityAvailable-Ability_AshRaiseDead, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshRaiseDead, NodeType=Action)
+Behaviors=(BehaviorName=SelectTargetForWarlockRaiseDead, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshRaiseDead, Child[1]=GenericSelectTargetSomewhatRandomly, Child[2]=HasValidTarget-Ability_AshRaiseDead)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshRaiseDead, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshRaiseDead, NodeType=Condition)

;DEATH'S EMBRACE
+Behaviors=(BehaviorName=TryDeathsEmbrace, NodeType=Sequence, Child[0]=IsAbilityAvailable-Ability_AshDeathsEmbrace, Child[1]=AnyAlliesVisible, Child[2]=SelectTargetForDeathsEmbrace, Child[3]=SelectAbility-Ability_AshDeathsEmbrace)

+Behaviors=(BehaviorName=SelectTargetForDeathsEmbrace, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshDeathsEmbrace, Child[1]=ScoreAllTargets_Ability_AshDeathsEmbrace, Child[2]=HasValidTarget-Ability_AshDeathsEmbrace)
+Behaviors=(BehaviorName=ScoreAllTargets_Ability_AshDeathsEmbrace, NodeType=RepeatUntilFail, Child[0]=ScoreTarget_DeathsEmbraceLoop)
+Behaviors=(BehaviorName=ScoreTarget_DeathsEmbraceLoop, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=ScoreTarget_DeathsEmbraceScoring, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=ScoreTarget_DeathsEmbraceScoring, NodeType=Successor, Child[0]=ScoreDeathsEmbraceOption)
+Behaviors=(BehaviorName=ScoreDeathsEmbraceOption, NodeType=Sequence, Child[0]=TargetIsAlly, Child[1]=TargetIsNotCivilian, Child[2]=TargetScoreHealthForDeathsEmbrace)
+Behaviors=(BehaviorName=TargetScoreHealthForDeathsEmbrace, NodeType=Selector, Child[0]=ScoreIfTargetInDeathsEmbraceRange, Child[1]=PenalizeScoreIfTarget_MaxHP, Child[2]=PenalizeScoreIfTarget_HighWill)

+Behaviors=(BehaviorName=PenalizeScoreIfTarget_MaxHP, NodeType=Sequence, Child[0]=TargetHasMaxHP, Child[1]=AddToTargetScore_-1000)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshDeathsEmbrace, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshDeathsEmbrace, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshDeathsEmbrace, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-Ability_AshDeathsEmbrace, NodeType=Condition)

+Behaviors=(BehaviorName=ScoreIfTargetInDeathsEmbraceRange, NodeType=Sequence, Child[0]=TargetHPForDeathsEmbrace, Child[1]=AddToTargetScore_10)
+Behaviors=(BehaviorName=TargetHPForDeathsEmbrace, NodeType=TargetStatCondition, Param[0]=eStat_HP, Param[1]="<=", Param[2]="75%")
+Behaviors=(BehaviorName=PenalizeScoreIfTarget_HighWill, NodeType=Sequence, Child[0]=TargetHasHighWill, Child[1]=AddToTargetScore_-1000)
+Behaviors=(BehaviorName=TargetHasHighWill, NodeType=TargetStatCondition, Param[0]=eStat_Will, Param[1]=">=", Param[2]="125")

;PSIONIC OPTION
+Behaviors=(BehaviorName=TryPsionicOption, NodeType=RandSelector, Child[0]=TryInsanity, Param[0]=20, Child[1]=TrySoulfire, Param[1]=30, Child[2]=TryShootOrReloadOrOverwatch, Param[2]=50)

;INSANITY
+Behaviors=(BehaviorName=TryInsanity, NodeType=Sequence, Child[0]=IsAbilityAvailable-Insanity, Child[1]=SelectTargetForInsanity, Child[2]=SelectAbility-Insanity)
+Behaviors=(BehaviorName=IsAbilityAvailable-Insanity, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Insanity, NodeType=Action)
+Behaviors=(BehaviorName=SelectTargetForInsanity, NodeType=Sequence, Child[0]=SetTargetStack-Insanity, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-Insanity)
+Behaviors=(BehaviorName=SetTargetStack-Insanity, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Insanity, NodeType=Condition)

;SOULFIRE - Warlock will try to use this power if he is injured.
+Behaviors=(BehaviorName=TrySoulFire, NodeType=Sequence, Child[0]=IsAbilityAvailable-SoulFire, Child[1]=SelectTargetForSoulFire, Child[2]=IsWounded, Child[3]=SelectAbility-SoulFire)
+Behaviors=(BehaviorName=IsAbilityAvailable-SoulFire, NodeType=Condition)
+Behaviors=(BehaviorName=SelectTargetForSoulFire, NodeType=Sequence, Child[0]=SetTargetStack-SoulFire, Child[1]=GenericSelectTargetSomewhatRandomly, Child[2]=HasValidTarget-SoulFire)
+Behaviors=(BehaviorName=IsWounded, NodeType=StatCondition, Param[0]=eStat_Hp, Param[1]="<", Param[2]="100%")
+Behaviors=(BehaviorName=SelectAbility-SoulFire, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-SoulFire, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-SoulFire, NodeType=Action)

;VOID RIFT - Warlock will try to use this power if there are at least 2 XCOM soldiers close enough together to be caught in the AoE.
+Behaviors=(BehaviorName=TryVoidRift, NodeType=Sequence, Child[0]=IsAbilityAvailable-VoidRift, Child[1]=FindPotentialAoETargets-VoidRiftProfile, Child[2]=SelectAoETarget-VoidRiftProfile, Child[3]=SelectAbility-VoidRift)
+Behaviors=(BehaviorName=IsAbilityAvailable-VoidRift, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-VoidRift, NodeType=Action)

;AOE
+Behaviors=(BehaviorName=FindPotentialAoETargets-VoidRiftProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-VoidRiftProfile, NodeType=Action)

;---------------------------------------------------------------------------------------
;   WARLOCK ABOMINATION
;---------------------------------------------------------------------------------------

+EquivalentAbilities=(KeyName=Ability_AshZombieSlash, EquivalentAbilityName[0]=Ability_AshZombieSlashM1, EquivalentAbilityName[1]=Ability_AshZombieSlashM2, EquivalentAbilityName[2]=Ability_AshZombieSlashM3)

+Behaviors=(BehaviorName="AshPsiAbomination::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AshPsiAbomination_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AshPsiAbomination_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AshPsiAbomination_RedAbilitySelector)
+Behaviors=(BehaviorName=AshPsiAbomination_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=AshPsiAbominationFirstAction, Child[2]=AshPsiAbominationLastAction)

+Behaviors=(BehaviorName=AshPsiAbominationFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AshPsiAbominationFirstActionSelector)
+Behaviors=(BehaviorName=AshPsiAbominationFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryZombieSlash, \\
	Child[1]=GenericEnemyMeleeRootFANATIC, \\
	Child[2]=MoveMeleeDashFANATICUnsafe, \\
	Child[3]=HuntEnemyUnsafe)

+Behaviors=(BehaviorName=AshPsiAbominationLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AshPsiAbominationLastActionSelector)
+Behaviors=(BehaviorName=AshPsiAbominationLastActionSelector, NodeType=Selector, \\
	Child[0]=TryZombieSlash, \\
	Child[1]=GenericEnemyMeleeRootFANATIC, \\
	Child[2]=MoveMeleeDashFANATICUnsafe, \\
	Child[3]=HuntEnemyUnsafe)

+Behaviors=(BehaviorName=TryZombieSlash, NodeType=Sequence, Child[0]=IsAbilityReady-Ability_AshZombieSlash, Child[1]=ZombieSlashStepSelector)
+Behaviors=(BehaviorName=ZombieSlashStepSelector, NodeType=Selector, Child[0]=ZombieSlashAttack, Child[1]=MoveMeleeIfFirstAbilityFANATIC)
+Behaviors=(BehaviorName=ZombieSlashAttack, NodeType=Sequence, Child[0]=SelectTargetForZombieSlash, Child[1]=SelectAbility-Ability_AshZombieSlash)

+Behaviors=(BehaviorName=SelectTargetForZombieSlash, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshZombieSlash, Child[1]=SelectBestTargetForZombieSlash, Child[2]=HasValidTarget-Ability_AshZombieSlash)
+Behaviors=(BehaviorName=SelectBestTargetForZombieSlash, NodeType=RepeatUntilFail, Child[0]=TargetSelectIterationForZombieSlash)
+Behaviors=(BehaviorName=TargetSelectIterationForZombieSlash, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=EvaluateTargetForZombieSlash, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=EvaluateTargetForZombieSlash, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth_HighFirst, Child[2]=TargetScoreMarked, Child[3]=AvoidBoundAndPanickedTargets, Child[4]=TargetScoreCivilian)

+Behaviors=(BehaviorName=IsAbilityReady-Ability_AshZombieSlash, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshZombieSlash, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshZombieSlash, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshZombieSlash, NodeType=Action)