[XComGame.XComGameState_AIGroup]
+FallbackExclusionList=AHWAvatarRaum
+FallbackExclusionList=AHWAvatarSyusa

[XComGame.X2AIBTBehaviorTree]

+EquivalentAbilities=( KeyName=StandardMelee, EquivalentAbilityName[0]=Rend )

; To Do: AI for each Avatar type, and replace the standard loot for Prototypes! Prototypes drop Requiem Essence and sometimes drop Requiem cores. But never Avatar corpses, and they don't count as Avatars in Waterworld.

; Prototype
+Behaviors=(BehaviorName="AHWAvatarPrototype::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AvatarPrototypeRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AvatarPrototypeRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AvatarPrototypeRedAbilitySelector)
+Behaviors=(BehaviorName=AvatarPrototypeRedAbilitySelector, NodeType=Selector, Child[0]=AvatarPrototypeRedFirstAction, Child[1]=AvatarPrototypeRedLastAction)

+Behaviors=(BehaviorName=AvatarPrototypeRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AvatarPrototypeRedFirstActionSelector)
+Behaviors=(BehaviorName=AvatarPrototypeRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=AvatarCallForRNF, \\
	Child[1]=TryDimensionalRift, \\
	Child[2]=TryNullLance, \\
	Child[3]=DoIfFlankedMove, \\
	Child[4]=AttackIfIdeal, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AvatarPrototypeRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AvatarPrototypeRedLastActionSelector)
+Behaviors=(BehaviorName=AvatarPrototypeRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=TryPsiMindControl, \\
	Child[3]=SelectMoveStandard, \\
	Child[4]=HuntEnemyWithCover)


; Myna
+Behaviors=(BehaviorName="AHWAvatarMyna::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AvatarMynaRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AvatarMynaRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AvatarMynaRedAbilitySelector)
+Behaviors=(BehaviorName=AvatarMynaRedAbilitySelector, NodeType=Selector, Child[0]=AvatarMynaRedFirstAction, Child[1]=AvatarMynaRedLastAction)

+Behaviors=(BehaviorName=AvatarMynaRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AvatarMynaRedFirstActionSelector)
+Behaviors=(BehaviorName=AvatarMynaRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=AvatarCallForRNF, \\
	Child[1]=TryDimensionalRift, \\
	Child[2]=TryNullLance, \\
	Child[3]=DoIfFlankedMove, \\
	Child[4]=AttackIfIdeal, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AvatarMynaRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AvatarMynaRedLastActionSelector)
+Behaviors=(BehaviorName=AvatarMynaRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=TryPsiMindControl, \\
	Child[3]=SelectMoveStandard, \\
	Child[4]=HuntEnemyWithCover)

; Angelis
+Behaviors=(BehaviorName="AHWAvatarAngelis::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AvatarAngelisRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AvatarAngelisRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AvatarAngelisRedAbilitySelector)
+Behaviors=(BehaviorName=AvatarAngelisRedAbilitySelector, NodeType=Selector, Child[0]=AvatarAngelisRedFirstAction, Child[1]=AvatarAngelisRedLastAction)

+Behaviors=(BehaviorName=AvatarAngelisRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AvatarAngelisRedFirstActionSelector)
+Behaviors=(BehaviorName=AvatarAngelisRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=AvatarCallForRNF, \\
	Child[1]=TryDimensionalRift, \\
	Child[2]=TryNullLance, \\
	Child[3]=DoIfFlankedMove, \\
	Child[4]=AttackIfIdeal, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AvatarAngelisRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AvatarAngelisRedLastActionSelector)
+Behaviors=(BehaviorName=AvatarAngelisRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=TryPsiMindControl, \\
	Child[3]=SelectMoveStandard, \\
	Child[4]=HuntEnemyWithCover)

; Selesis
+Behaviors=(BehaviorName="AHWAvatarSelesis::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AvatarSelesisRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AvatarSelesisRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AvatarSelesisRedAbilitySelector)
+Behaviors=(BehaviorName=AvatarSelesisRedAbilitySelector, NodeType=Selector, Child[0]=AvatarSelesisRedFirstAction, Child[1]=AvatarSelesisRedLastAction)

+Behaviors=(BehaviorName=AvatarSelesisRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AvatarSelesisRedFirstActionSelector)
+Behaviors=(BehaviorName=AvatarSelesisRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=AvatarCallForRNF, \\
	Child[1]=TryDimensionalRift, \\
	Child[2]=TryNullLance, \\
	Child[3]=DoIfFlankedMove, \\
	Child[4]=AttackIfIdeal, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AvatarSelesisRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AvatarSelesisRedLastActionSelector)
+Behaviors=(BehaviorName=AvatarSelesisRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=TryPsiMindControl, \\
	Child[3]=SelectMoveStandard, \\
	Child[4]=HuntEnemyWithCover)

; Ulin
+Behaviors=(BehaviorName="AHWAvatarUlin::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AvatarUlinRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AvatarUlinRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AvatarUlinRedAbilitySelector)
+Behaviors=(BehaviorName=AvatarUlinRedAbilitySelector, NodeType=Selector, Child[0]=AvatarUlinRedFirstAction, Child[1]=AvatarUlinRedLastAction)

+Behaviors=(BehaviorName=AvatarUlinRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AvatarUlinRedFirstActionSelector)
+Behaviors=(BehaviorName=AvatarUlinRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=AvatarCallForRNF, \\
	Child[1]=TryDimensionalRift, \\
	Child[2]=TryNullLance, \\
	Child[3]=DoIfFlankedMove, \\
	Child[4]=AttackIfIdeal, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AvatarUlinRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AvatarUlinRedLastActionSelector)
+Behaviors=(BehaviorName=AvatarUlinRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=TryPsiMindControl, \\
	Child[3]=SelectMoveStandard, \\
	Child[4]=HuntEnemyWithCover)


; Shalin
+Behaviors=(BehaviorName="AHWAvatarShalin::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AvatarShalinRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AvatarShalinRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AvatarShalinRedAbilitySelector)
+Behaviors=(BehaviorName=AvatarShalinRedAbilitySelector, NodeType=Selector, Child[0]=AvatarShalinRedFirstAction, Child[1]=AvatarShalinRedLastAction)

+Behaviors=(BehaviorName=AvatarShalinRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AvatarShalinRedFirstActionSelector)
+Behaviors=(BehaviorName=AvatarShalinRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=AvatarCallForRNF, \\
	Child[1]=TryDimensionalRift, \\
	Child[2]=TryNullLance, \\
	Child[3]=DoIfFlankedMove, \\
	Child[4]=AttackIfIdeal, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AvatarShalinRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AvatarShalinRedLastActionSelector)
+Behaviors=(BehaviorName=AvatarShalinRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=TryPsiMindControl, \\
	Child[3]=SelectMoveStandard, \\
	Child[4]=HuntEnemyWithCover)

; Syusa
+Behaviors=(BehaviorName="AHWAvatarSyusa::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AvatarSyusaRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AvatarSyusaRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AvatarSyusaRedAbilitySelector)
+Behaviors=(BehaviorName=AvatarSyusaRedAbilitySelector, NodeType=Selector, Child[0]=AvatarSyusaRedFirstAction, Child[1]=AvatarSyusaRedLastAction)

+Behaviors=(BehaviorName=AvatarSyusaRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AvatarSyusaRedFirstActionSelector)
+Behaviors=(BehaviorName=AvatarSyusaRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=AvatarCallForRNF, \\
	Child[1]=TryDimensionalRift, \\
	Child[2]=TryNullLance, \\
	Child[3]=DoIfFlankedMove, \\
	Child[4]=AttackIfIdeal, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AvatarSyusaRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AvatarSyusaRedLastActionSelector)
+Behaviors=(BehaviorName=AvatarSyusaRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=TryPsiMindControl, \\
	Child[3]=SelectMoveStandard, \\
	Child[4]=HuntEnemyWithCover)

; Raum
+Behaviors=(BehaviorName="AHWAvatarRaum::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AvatarRaumRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AvatarRaumRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AvatarRaumRedAbilitySelector)
+Behaviors=(BehaviorName=AvatarRaumRedAbilitySelector, NodeType=Selector, Child[0]=AvatarRaumRedFirstAction, Child[1]=AvatarRaumRedLastAction)

+Behaviors=(BehaviorName=AvatarRaumRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AvatarRaumRedFirstActionSelector)
+Behaviors=(BehaviorName=AvatarRaumRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=AvatarCallForRNF, \\
	Child[1]=TryDimensionalRift, \\
	Child[2]=TryNullLance, \\
	Child[3]=TryRaumInversion, \\
	Child[4]=TryStandardMelee, \\
	Child[5]=DoIfFlankedMove, \\
	Child[6]=SelectMoveStandard, \\
	Child[7]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AvatarRaumRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AvatarRaumRedLastActionSelector)
+Behaviors=(BehaviorName=AvatarRaumRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryParry, \\
	Child[1]=TryStandardMelee, \\
	Child[2]=TryPsiMindControl, \\
	Child[3]=SelectMoveStandard, \\
	Child[4]=HuntEnemyWithCover)




; Raum Abilities

+Behaviors=(BehaviorName=TryParry, NodeType=Selector, Child[0]=AvatarRaumCanParry)

+Behaviors=(BehaviorName=AvatarRaumCanParry, NodeType=Sequence, Child[0]=IsAbilityAvailable-Parry, Child[1]=WasLastAbility-Rend, Child[2]=SelectAbility-Parry)

+Behaviors=(BehaviorName=AvatarCallForRNF, NodeType=Sequence, Child[0]=IsAbilityAvailable-AHWAvatarCallRNF, Child[1]=SelectAbility-AHWAvatarCallRNF)

+Behaviors=(BehaviorName=TryRaumInversion, NodeType=Sequence, Child[0]=IsAbilityAvailable-AHWRaumInversion, Child[1]=SelectTargetForAHWRaumInversion, Child[2]=SelectAbility-AHWRaumInversion)

+Behaviors=(BehaviorName=SelectTargetForAHWRaumInversion, NodeType=Sequence, Child[0]=SetTargetStack-AHWRaumInversion, Child[1]=SelectBestTargetForGetOverHere, Child[2]=HasValidTarget-AHWRaumInversion)

+Behaviors=(BehaviorName=IsAbilityAvailable-AHWRaumInversion, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AHWRaumInversion, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-AHWRaumInversion, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-AHWRaumInversion, NodeType=Action)

+Behaviors=(BehaviorName=WasLastAbility-Rend, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-Parry, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Parry, NodeType=Action)

; Generic Avatar Ability

+Behaviors=(BehaviorName=IsAbilityAvailable-AHWAvatarCallRNF, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AHWAvatarCallRNF, NodeType=Action)