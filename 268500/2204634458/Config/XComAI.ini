[XComGame.XComGameState_AIGroup]
+FallbackExclusionList=AHWBerserkerMagna
+FallbackExclusionList=AHWViperMagna

; New AoE profiles
+AoEProfiles=( Profile=MagnaQuakeProfile, Ability=Quake, bIgnoreSelfDamage=True, bFailOnObjectiveFire=false, bPathToTarget=true, MinTargets=1)

; --- To Do - AI for the Custom Avatars, confirm that the AHW version of Operation Leviathan works as intended.., disallow Requiem Fissure Escapes immediately after generating a Requiem Shroud. Chosen abilities, ability perks, loot, and tech stuffs. 
; To Do -- Complete the overhaul of Chosen loot, Resources In Resources_Requiem, abilities, and Chosen Techs to allow production. Maybe allow more chosen loot variants! EG: Requiem Grenades
[XComGame.X2AIBTBehaviorTree]
+EquivalentAbilities=(KeyName=StandardMelee, EquivalentAbilityName[0]=AHWMagnaDevastatingPunch, EquivalentAbilityName[1]=HuntingHoundMark)
+EquivalentAbilities=(KeyName=StandardShot, EquivalentAbilityName[0]=MagnaStandardShot, EquivalentAbilityName[1]=AHWXCOMStandardShot )

;Berserker

+Behaviors=(BehaviorName="AHWBerserkerMagna::CharacterRoot", NodeType=Selector, Child[0]=MagnaEscapeBranch, Child[1]=MagnaRequiemFissureBranch, Child[2]=TryJobUnsafe, Child[3]=GenericGreenMovement, Child[4]=AHWBerserkerMagnaMeleeRedAlert, Child[5]=GenericAlertHandler)
+Behaviors=(BehaviorName=AHWBerserkerMagnaMeleeRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AHWBerserkerMagna_RedAbilitySelector)
+Behaviors=(BehaviorName=AHWBerserkerMagna_RedAbilitySelector, NodeType=Selector, Child[0]=AHWBerserkerMagnaRedFirstAction, Child[1]=AHWBerserkerMagnaRedLastAction)

+Behaviors=(BehaviorName=AHWBerserkerMagnaRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AHWBerserkerMagnaRedFirstActionSelector)
+Behaviors=(BehaviorName=AHWBerserkerMagnaRedFirstActionSelector, NodeType=Selector, \\
    Child[0]=MagnaRequiemFissureBranch, \\
	Child[1]=TryTriggerRage, \\
    Child[2]=TryMagnaQuake, \\
	Child[3]=TryStandardMelee, \\
	Child[4]=MoveMeleeDashFANATICUnsafe, \\
	Child[5]=HuntEnemyUnsafe)

+Behaviors=(BehaviorName=AHWBerserkerMagnaRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AHWBerserkerMagnaRedLastActionSelector)
+Behaviors=(BehaviorName=AHWBerserkerMagnaRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryStandardMelee, \\
	Child[1]=MoveMeleeDashFANATICUnsafe, \\
	Child[2]=HuntEnemyUnsafe)

+Behaviors=(BehaviorName="TryMagnaQuake", NodeType=Sequence, Child[0]=IsAbilityAvailable-AHWMagnaQuake, Child[1]=FindPotentialAoETargets-MagnaQuakeProfile, Child[2]=SelectAoETarget-MagnaQuakeProfile, Child[3]=SelectAbility-AHWMagnaQuake)
+Behaviors=(BehaviorName=FindPotentialAoETargets-MagnaQuakeProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-MagnaQuakeProfile, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-AHWMagnaQuake, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AHWMagnaQuake, NodeType=Action)

;Viper

+Behaviors=(BehaviorName="AHWViperMagna::CharacterRoot", NodeType=Selector, Child[0]=MagnaEscapeBranch, Child[1]=MagnaRequiemFissureBranch, Child[2]=TryJob, Child[3]=GenericGreenMovement, Child[4]=AHWViperMagnaMeleeRedAlert, Child[5]=GenericAlertHandler)
+Behaviors=(BehaviorName=AHWViperMagnaMeleeRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AHWViperMagna_RedAbilitySelector)
+Behaviors=(BehaviorName=AHWViperMagna_RedAbilitySelector, NodeType=Selector, Child[0]=AHWViperMagnaRedFirstAction, Child[1]=AHWViperMagnaRedLastAction, Child[2]=AHWViperMagnaStealthBranch)

+Behaviors=(BehaviorName=AHWViperMagnaRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MagnaNotStealthed, Child[2]=AHWViperMagnaRedFirstActionSelector)
+Behaviors=(BehaviorName=AHWViperMagnaRedFirstActionSelector, NodeType=Selector, \\
    Child[0]=MagnaRequiemFissureBranch, \\
	Child[1]=DoIfFlankedMove, \\
	Child[2]=AHWShootIfIdealOtherwiseCloak, \\
	Child[3]=TryAHWMagnaPull, \\
	Child[4]=MoveAdvanceToCover, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AHWViperMagnaRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MagnaNotStealthed, Child[2]=AHWViperMagnaRedLastActionSelector)
+Behaviors=(BehaviorName=AHWViperMagnaRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryAHWSpinebreaker, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=MoveAdvanceToCover, \\
	Child[3]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AHWViperMagnaStealthBranch, NodeType=Sequence, Child[0]=AffectedByEffect-VanishingWind, Child[1]=InvisibleMagnaSelector)
+Behaviors=(BehaviorName=InvisibleMagnaSelector, NodeType=Selector, Child[0]=StealthedMagnaMovedAndCanAttackSoReveal, Child[1]=InvisibleMagnaMove)
+Behaviors=(BehaviorName=InvisibleMagnaMove, NodeType=Sequence, Child[0]=AffectedByEffect-VanishingWind, Child[1]=IsAbilityAvailable-StandardMove, Child[2]=FindStealthDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=StealthedMagnaMovedAndCanAttackSoReveal, NodeType=Sequence, Child[0]=AffectedByEffect-VanishingWind, Child[1]=WasLastAbility-StandardMove, Child[2]=MultipleEnemiesVisible, Child[3]=AHWMagnaUncloak)

; --- Berserker Reaction ---
+Behaviors=(BehaviorName=AHWMagna_EndlessHate, NodeType=Selector, \\
	Child[0]=TryMagnaQuake, \\
	Child[1]=TryStandardMelee, \\
	Child[2]=MoveMeleeDashFANATICUnsafe, \\
	Child[3]=HuntEnemyUnsafe)

; --- Viper Reaction - Safety check to prevent weird scenarios.

+Behaviors=(BehaviorName=AHWMagna_ViciousCoils, NodeType=Selector, \\
	Child[0]=AHWMagnaUncloakedSoAttack, \\
	Child[1]=AHWViperMagnaStealthBranch)

+Behaviors=(BehaviorName=AHWMagna_ViciousCoilsUnstealthed, NodeType=Selector, \\
	Child[0]=TryAHWSpinebreaker, \\
	Child[1]=AHWShootIfIdealOtherwiseCloak, \\
	Child[2]=TryAHWMagnaPull, \\
	Child[3]=MoveFlanking, \\
	Child[4]=TryShootOrReloadOrOverwatch, \\
	Child[5]=HuntEnemyWithCover)
	
; --- Blood Tide Reaction
+Behaviors=(BehaviorName=AHWDE_BloodTideReaction, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=TryStandardMelee, \\
	Child[3]=HuntEnemyWithCover)

; --- Viper Ability Behavior ---
+Behaviors=(BehaviorName=AHWShootIfIdealOtherwiseCloak, NodeType=Selector, Child[0]=ShootIfIdeal, Child[1]=AHWRequiemCloak)

+Behaviors=(BehaviorName=AHWMagnaUncloakedSoAttack, NodeType=Sequence, Child[0]=MagnaNotStealthed, Child[1]=AHWMagna_ViciousCoilsUnstealthed)

+Behaviors=(BehaviorName=AHWMagnaUncloak, NodeType=Sequence, Child[0]=IsAbilityReady-AHWMagnaUncloak, Child[1]=IsAbilityAvailable-AHWMagnaUncloak, Child[2]=SelectAbility-AHWMagnaUncloak)
	
+Behaviors=(BehaviorName=IsAbilityReady-AHWMagnaUncloak, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-AHWMagnaUncloak, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AHWMagnaUncloak, NodeType=Action)

+Behaviors=(BehaviorName=AHWRequiemCloak, NodeType=Sequence, Child[0]=IsAbilityReady-AHWMagnaCloak, Child[1]=IsAbilityAvailable-AHWMagnaCloak, Child[2]=SelectAbility-AHWMagnaCloak)
	
+Behaviors=(BehaviorName=IsAbilityReady-AHWMagnaCloak, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-AHWMagnaCloak, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AHWMagnaCloak, NodeType=Action)

+Behaviors=(BehaviorName=TryAHWMagnaPull, NodeType=Sequence, Child[0]=IsAbilityAvailable-AHWMagnaPull, Child[1]=HasBindableNeighborTile, Child[2]=SelectTargetForAHWMagnaPull, Child[3]=SelectAbility-AHWMagnaPull)

+Behaviors=(BehaviorName=SelectTargetForAHWMagnaPull, NodeType=Sequence, Child[0]=SetTargetStack-AHWMagnaPull, Child[1]=SelectBestTargetForGetOverHere, Child[2]=HasValidTarget-AHWMagnaPull)

+Behaviors=(BehaviorName=IsAbilityAvailable-AHWMagnaPull, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AHWMagnaPull, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-AHWMagnaPull, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-AHWMagnaPull, NodeType=Action)

+Behaviors=(BehaviorName=TryAHWSpinebreaker, NodeType=Sequence, Child[0]=IsAbilityAvailable-AHWMagnaPointBlank, Child[1]=SelectTargetForAHWMagnaPointBlank, Child[2]=SelectAbility-AHWMagnaPointBlank)

+Behaviors=(BehaviorName=SelectTargetForAHWMagnaPointBlank, NodeType=Sequence, Child[0]=SetTargetStack-AHWMagnaPointBlank, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-AHWMagnaPointBlank)

+Behaviors=(BehaviorName=IsAbilityAvailable-AHWMagnaPointBlank, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AHWMagnaPointBlank, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-AHWMagnaPointBlank, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-AHWMagnaPointBlank, NodeType=Action)

; --- Requiem Behavior ---

+Behaviors=(BehaviorName=MagnaRequiemFissureBranch, NodeType=Sequence, Child[0]=IsAbilityAvailable-AHWRequiemFissure, Child[1]=HasLowHP, Child[2]=SelectAbility-AHWRequiemFissure)
	
+Behaviors=(BehaviorName=IsAbilityReady-AHWRequiemFissure, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-AHWRequiemFissure, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AHWRequiemFissure, NodeType=Action)

+Behaviors=(BehaviorName=MagnaEscapeBranch, NodeType=Sequence, Child[0]=IsAbilityAvailable-AHWMagnaEscape, Child[1]=MagnaCannotEscape, Child[2]=SelectAbility-AHWMagnaEscape)
	
+Behaviors=(BehaviorName=IsAbilityReady-AHWMagnaEscape, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-AHWMagnaEscape, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AHWMagnaEscape, NodeType=Action)

+Behaviors=(BehaviorName=MagnaNotStealthed, NodeType=Inverter, Child[0]=AffectedByEffect-VanishingWind)

+Behaviors=(BehaviorName=MagnaCannotEscape, NodeType=Inverter, Child[0]=AHWMagnaCannotEscape)

+Behaviors=(BehaviorName=AHWMagnaCannotEscape, NodeType=StatCondition, Param[0]=BTVar, Param[1]="!=", Param[2]="0", Param[3]="MagnaCannotEscapeBTV")
+Behaviors=(BehaviorName=SetNoMagnaEscape, NodeType=Action, Param[0]=SetBTVar, Param[1]="MagnaCannotEscapeBTV", Param[2]="1")