[XComGame.X2AIBTBehaviorTree]
; Root replacement.
-Behaviors=(BehaviorName=PanickedRoot, NodeType=Selector, Child[0]=Panicked_FirstAction, Child[1]=Panicked_LastAction, Child[2]=SkipMove)
-Behaviors=(BehaviorName=PanicBerserkRoot, NodeType=Selector, Child[0]=ShootRandomEnemyForPanic, Child[1]=NeedsReload, Child[2]=TryStandardMeleeUnsafe, Child[3]=SkipMove)
-Behaviors=(BehaviorName=PanicObsessedRoot, NodeType=Selector, Child[0]=ObsessedStandardShotAttack, Child[1]=NeedsReload, Child[2]=PanickedObsessed_MoveActions, Child[3]=DoCower, Child[4]=SkipMove)
-Behaviors=(BehaviorName=PanicShatteredRoot, NodeType=Selector, Child[0]=DoCower, Child[1]=MoveIfCowerNotAvailable, Child[2]=SkipMove)


+Behaviors=(BehaviorName=PanicBerserkRoot, NodeType=Selector, Child[0]=HerWill_Action, Child[1]=ShootRandomEnemyForPanic, Child[2]=NeedsReload, Child[3]=TryStandardMeleeUnsafe, Child[4]=SkipMove)
+Behaviors=(BehaviorName=PanicObsessedRoot, NodeType=Selector, Child[0]=HerWill_Action, Child[1]=ObsessedStandardShotAttack, Child[2]=NeedsReload, Child[3]=PanickedObsessed_MoveActions, Child[4]=DoCower, Child[5]=SkipMove)
+Behaviors=(BehaviorName=PanicShatteredRoot, NodeType=Selector, Child[0]=HerWill_Action, Child[1]=DoCower, Child[2]=MoveIfCowerNotAvailable, Child[3]=SkipMove)
+Behaviors=(BehaviorName=PanickedRoot, NodeType=Selector, Child[0]=HerWill_Action, Child[1]=Panicked_FirstAction, Child[2]=Panicked_LastAction, Child[3]=SkipMove)


+Behaviors=(BehaviorName=HerWill_Action, NodeType=Sequence, Child[0]=HerWill_Selector);
+Behaviors=(BehaviorName=HerWill_Selector, NodeType=Selector, \\
	Child[0]=TryHerWillBurst, \\
	Child[1]=TryHerWill, \\ 
	Child[2]=SkipMove)


; ---------------- Availability Checks ------------------------------------------------------------
+Behaviors=(BehaviorName=IsAbilityAvailable-HerWill, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-HerWillBurst, NodeType=Condition)

; ---------------- Select Ability Nodes ---------------------------------------
+Behaviors=(BehaviorName=SelectAbility-HerWill, NodeType=Action)
+Behaviors=(BehaviorName=SelectAbility-HerWillBurst, NodeType=Action)

; ---------------- HerWill (PsiWitch) -----------------------------------
+Behaviors=(BehaviorName=TryHerWill, NodeType=Sequence, Child[0]=IsAbilityAvailable-HerWill, Child[1]=SelectAbility-HerWill)
+Behaviors=(BehaviorName=TryHerWillBurst, NodeType=Sequence, Child[0]=IsAbilityAvailable-HerWillBurst, Child[1]=SelectAbility-HerWillBurst)


; -------------------- Mind Controlled Target ---------------------------------
-Behaviors=(BehaviorName=MindControlledRoot, NodeType=Selector, \\
	Child[0]=MimicBeaconBehavior, \\
	Child[1]=MindControlledMove, \\
	Child[2]=MCTryGrenadeOption, \\
	Child[3]=TryStandardMeleeUnsafe, \\
	Child[4]=ShootIfAvailable, \\
	Child[5]=NeedsReload, \\
	Child[6]=TryOverwatch, \\
	Child[7]=SkipMove)
+Behaviors=(BehaviorName=MindControlledRoot, NodeType=Selector, \\
	Child[0]=HerWill_Action, \\
	Child[1]=MimicBeaconBehavior, \\
	Child[2]=MindControlledMove, \\
	Child[3]=MCTryGrenadeOption, \\
	Child[4]=TryStandardMeleeUnsafe, \\
	Child[5]=ShootIfAvailable, \\
	Child[6]=NeedsReload, \\
	Child[7]=TryOverwatch, \\
	Child[8]=SkipMove)

;-Behaviors=(BehaviorName=SelectPriestAbility, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=HolyWarriorActiveBranch, Child[2]=HolyWarriorInactiveBranch, Child[3]=TryShootOrReload, Child[4]=SkipMove)
;-Behaviors=(BehaviorName=SelectPriestAbility, NodeType=Selector, Child[0]=HolyWarriorActiveBranch, Child[1]=HolyWarriorInactiveBranch, Child[2]=TryShootOrReload, Child[3]=SkipMove)
;+Behaviors=(BehaviorName=SelectPriestAbility, NodeType=Selector, Child[0]=Overdrive_Action, Child[1]=PriestRedFirstActionSelector, Child[2]=HolyWarriorActiveBranch, Child[3]=HolyWarriorInactiveBranch, Child[4]=SkipMove)


;;Overdrive
;+Behaviors=(BehaviorName=Overdrive_Action, NodeType=Sequence, Child[0]=Overdrive_Selector);
;+Behaviors=(BehaviorName=Overdrive_Selector, NodeType=Selector, \\
;	Child[0]=TryOverdrive, \\
;	Child[1]=TryDimensionalRift, \\ 
;	Child[2]=SkipMove)

;+Behaviors=(BehaviorName=PriestRedFirstActionSelector, NodeType=Selector, \\
;	Child[0]=TrySoulfire, \\ 
;	Child[1]=TryVolt, \\ 
;	Child[2]=ShootIfAvailable, \\
;	Child[3]=SkipMove)
;
;
;+Behaviors=(BehaviorName=IsAbilityAvailable-Overdrive, NodeType=Condition)
;+Behaviors=(BehaviorName=SelectAbility-Overdrive, NodeType=Action)
;+Behaviors=(BehaviorName=TryOverdrive, NodeType=Sequence, Child[0]=IsAbilityAvailable-Overdrive, Child[1]=SelectAbility-Overdrive);
;
;+Behaviors=(BehaviorName=IsAbilityAvailable-ManualOverride, NodeType=Condition)
;+Behaviors=(BehaviorName=SelectAbility-ManualOverride, NodeType=Action)
;+Behaviors=(BehaviorName=TryManualOverride, NodeType=Sequence, Child[0]=IsAbilityAvailable-ManualOverride, Child[1]=SelectAbility-ManualOverride)
;

;;Volt
;+Behaviors=(BehaviorName=SelectTargetForVolt, NodeType=Sequence, Child[0]=SetTargetStack-Volt, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-Volt)
;+Behaviors=(BehaviorName=TryVolt, NodeType=Sequence, Child[0]=IsAbilityAvailable-Volt, Child[1]=SelectTargetForVolt, Child[2]=SelectAbility-Volt)

;+Behaviors=(BehaviorName=HasValidTarget-Volt, NodeType=Condition)
;+Behaviors=(BehaviorName=SetTargetStack-Volt, NodeType=Action)
;+Behaviors=(BehaviorName=IsAbilityAvailable-Volt, NodeType=Condition)
;+Behaviors=(BehaviorName=SelectAbility-Volt, NodeType=Action)

;;IonicStorm
;+Behaviors=(BehaviorName=SelectTargetForIonicStorm, NodeType=Sequence, Child[0]=SetTargetStack-IonicStorm, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-IonicStorm)
;+Behaviors=(BehaviorName=TryIonicStorm, NodeType=Sequence, Child[0]=IsAbilityAvailable-IonicStorm, Child[1]=SelectTargetForIonicStorm, Child[2]=SelectAbility-IonicStorm)

;+Behaviors=(BehaviorName=HasValidTarget-IonicStorm, NodeType=Condition)
;+Behaviors=(BehaviorName=SetTargetStack-IonicStorm, NodeType=Action)
;+Behaviors=(BehaviorName=IsAbilityAvailable-IonicStorm, NodeType=Condition)
;+Behaviors=(BehaviorName=SelectAbility-IonicStorm, NodeType=Action)

;;Soulfire
;+Behaviors=(BehaviorName=SelectTargetForSoulfire, NodeType=Sequence, Child[0]=SetTargetStack-Soulfire, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-Soulfire)
;+Behaviors=(BehaviorName=TrySoulfire, NodeType=Sequence, Child[0]=IsAbilityAvailable-Soulfire, Child[1]=SelectTargetForSoulfire, Child[2]=SelectAbility-Soulfire)

;+Behaviors=(BehaviorName=HasValidTarget-Soulfire, NodeType=Condition)
;+Behaviors=(BehaviorName=SetTargetStack-Soulfire, NodeType=Action)
;+Behaviors=(BehaviorName=IsAbilityAvailable-Soulfire, NodeType=Condition)
;+Behaviors=(BehaviorName=SelectAbility-Soulfire, NodeType=Action)


;;Fuse
;+Behaviors=(BehaviorName=SelectTargetForFuse, NodeType=Sequence, Child[0]=SetTargetStack-Fuse, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-Fuse)
;+Behaviors=(BehaviorName=TryFuse, NodeType=Sequence, Child[0]=IsAbilityAvailable-Fuse, Child[1]=SelectTargetForFuse, Child[2]=SelectAbility-Fuse)

;+Behaviors=(BehaviorName=HasValidTarget-Fuse, NodeType=Condition)
;+Behaviors=(BehaviorName=SetTargetStack-Fuse, NodeType=Action)
;+Behaviors=(BehaviorName=IsAbilityAvailable-Fuse, NodeType=Condition)
;+Behaviors=(BehaviorName=SelectAbility-Fuse, NodeType=Action)